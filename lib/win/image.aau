//image 图像
import win;
namespace win.image;
 
LoadCursorFromFileA =  ::User32.api("LoadCursorFromFileA","pointer(string lpFileName)")
CreateIconFromResourceA = ::User32.api("CreateIconFromResource","pointer(pointer res,INT size,bool fIcon, INT ver)");

DestroyIcon = ::User32.api("DestroyIcon","int(pointer hIcon)")
DestroyCursor = ::User32.api("DestroyCursor","int(pointer hCursor)")

loadIcon = function(id,hinst){  
	if(type(id)==type.number){
		id = topointer(id)
	}
	return ::LoadIcon(hinst,id); 
}
loadCursor = function(id,hinst){   
	if(type(id)==type.number){
		id = topointer(id)
	}
	return ::LoadCursor(hinst,id); 
}
loadImage = function(path,hinst){   
	if(type(path)==type.number){
		path = topointer(path)
	} 
	return ::LoadImage( hinst, path,0x0/*_IMAGE_BITMAP*/,0,0,0 ); 
}

//查找图标文件,如果在资源文件中,创建临时文件
var findpath  = class {
	ctor( path){ 
		if( not  ..io.exist(path) ){
			var buf = ..string.load(path);
			if(!buf)return;
			
			this.tmp = ..io.tmpname(true) 
			..string.save(this.tmp,buf ) 
			this.safepath = this.tmp  
			
		}
		else {
			this.safepath = ..io.fullpath(path)
		} 
	};
	free = function(){
		if(this.tmp)
			..io.remove(this.tmp)
	}
}

loadIconFromFile = function( path,gc=true ){
    var finder = findpath(path)
	assert( finder,'错误的图标文件路径\n'+path) ;
	
	var hicon  = ::LoadImage( ,finder.safepath,0x1/*_IMAGE_ICON*/,0,0,0x10/*_LR_LOADFROMFILE*/ );
	assert(hicon,"加载图标失败"+path)
	finder.free() //删除临时文件

	if(! (gc && ret ) ) return hicon;
	
	return ..gcdata(  
		_topointer = hicon;
		_gc = function(){
			DestroyIcon(hicon);
		} 
	);
}

loadCursorFromFile = function(path,gc=true ){
	var finder = findpath(path)
	assert( finder,'错误的图标文件路径\n'+path)  
	
	hcur = LoadCursorFromFileA( finder.safepath ); 
	assert(hcur,"加载图标失败"+path)
	finder.free()//删除临时文件

	if(! (gc && ret ) ) return hcur;
	return ..gcdata(  
		_topointer = hcur;
		_gc = function(){
			DestroyCursor(hcur) 
		} 
	); 
}

loadImageFromFile  = function(path,gc=true){  

	var hBmp;
	if( not  ..io.exist(path) ){
		var buf = ..string.load(path);
		assert( buf ,'错误的图像文件路径\n'+path) ;
		var tmp = ..io.tmpname(true)
		..string.save(tmp,buf ) 
		hBmp = ::LoadImage( , tmp ,0x0/*_IMAGE_BITMAP*/,0,0,0x10/*_LR_LOADFROMFILE*/ ); 
		..io.remove(tmp)
	}
	else 
		hBmp = ::LoadImage( , ..io.fullpath(path),0x0/*_IMAGE_BITMAP*/,0,0,0x10/*_LR_LOADFROMFILE*/ );
	
	if(! (gc && ret ) ) return hBmp;	
	return ..gcdata(  
		_topointer = hBmp;
		_gc = function(){
			::DeleteObject(hBmp)
		} 
	);   
}

::Shell32 := ..raw.loadDll("Shell32.dll") 
ExtractIcon = ::Shell32.api("ExtractIconA","int(pointer hInst,STRING fileName,int ind)")

extractIcon = function(fileName,ind=1,gc=true){
	var ret = ExtractIcon(_HINSTANSE,..io.localpath(fileName) or fileName,ind-1);
	if( ind <= 0 ) return ret;
	ret = topointer(ret);
	if(! (gc && ret ) ) return ret;	
	return ..gcdata(  
		_topointer = ret;
		_gc = function(){
			DestroyIcon(ret)
		} 
	);
}

IconDirEntry = class {
	byte bWidth;
	byte bHeight;
	byte bColorCount;
	byte bReserved;
	word wPlanes;
	word wBitCount;
	int dwBytesInRes;
	int dwImageOffset;
}

createIconFromResource = function(iconData,width,fIcons=true){
	if (#iconData <= 0x104/*_MAX_PATH*/) {
		iconData = ..string.load( iconData );
	} 
	
	var count = ..raw.convert( iconData, { word n },5).n;
	for (i = 0; count - 1) {
		var entry = ..raw.convert( iconData, IconDirEntry(),7 + i * 16 );
		
		if (width && entry.bWidth == width) {
			return CreateIconFromResourceA(
				..string.sub(iconData, entry.dwImageOffset + 1, entry.dwImageOffset + 1 + entry.dwBytesInRes),
				entry.dwBytesInRes, fIcons, 196608
			);
		} 
	}	
}

/**intellisense(win.image)
loadIconFromFile(.(位图路径,是否自动释放) = 自文件载入图标,自动支持AAuto资源文件\n参数二默认为true
loadImageFromFile(.(位图路径,是否自动释放) = 自文件载入位图,自动支持AAuto资源文件\n参数二默认为true
loadCursorFromFile(.(位图路径,是否自动释放) = 自文件载入光标,自动支持AAuto资源文件\n参数二默认为true
loadIcon(__/*请输入资源名*/,模块句柄) = 自图标资源载入图标,\n返回句柄无需释放
loadImage(__/*请输入资源名*/,模块句柄) = 自位图资源载入位图,\n返回句柄无需释放
loadCursor(__/*请输入资源名*/,模块句柄) = 自光标资源载入光标,\n返回句柄无需释放
extractIcon(.(EXE文件路径,图标索引,是否自动释放) = 索引默认为1,如果为0,则返回图标总数,\n参数二默认为true
createIconFromResource(.(图标数据或数据,匹配像素宽度,是否图标) = 在图标数据中加载指定像素的图标,\n参数三可省略,默认为true,载入光标\n请指定为false
DestroyIcon(.(图标句柄) = 销毁图标
DestroyCursor(.(图标句柄) = 销毁光标
end intellisense**/

 